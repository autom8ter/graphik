// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Counter struct {
	Count int `json:"count"`
}

type Edge struct {
	Node *Node `json:"node"`
	From *Node `json:"from"`
	To   *Node `json:"to"`
}

type EdgeConnection struct {
	Cursor     string    `json:"cursor"`
	TotalCount int       `json:"totalCount"`
	Edge       []*Edge   `json:"edge"`
	PageInfo   *PageInfo `json:"pageInfo"`
}

type EdgeInput struct {
	Node map[string]interface{} `json:"node"`
	From *ForeignKey            `json:"from"`
	To   *ForeignKey            `json:"to"`
}

type Expression struct {
	Key      string      `json:"key"`
	Operator string      `json:"operator"`
	Value    interface{} `json:"value"`
}

type ForeignKey struct {
	ID   string `json:"_id"`
	Type string `json:"_type"`
}

type Node struct {
	Attributes map[string]interface{} `json:"attributes"`
	Edges      *EdgeConnection        `json:"edges"`
}

type PageInfo struct {
	StartCursor string `json:"startCursor"`
	EndCursor   string `json:"endCursor"`
	HasNextPage bool   `json:"hasNextPage"`
}

type QueryEdges struct {
	Type   string        `json:"_type"`
	Filter []*Expression `json:"filter"`
	Limit  int           `json:"limit"`
}

type QueryNodes struct {
	Type   string        `json:"_type"`
	Filter []*Expression `json:"filter"`
	Limit  int           `json:"limit"`
}
