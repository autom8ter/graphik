# GraphQL schema example
#
# https://gqlgen.com/getting-started/
scalar Map
scalar Any

type Counter {
  count: Int!
}

type ForeignKey {
  _id: String!
  _type: String!
}

type Node {
  attributes: Map!
  edges(first: Int, after: ID): EdgeConnection
}

type Edge {
  node: Map!
  from: Node!
  to: Node!
}

type EdgeConnection {
  cursor: ID!
  totalCount: Int!
  edge: [Edge!]
  pageInfo: PageInfo!
}

# Information for paginating this connection
type PageInfo {
  startCursor: ID!
  endCursor: ID!
  hasNextPage: Boolean!
}

input Expression {
  key: String!
  operator: String!
  value: Any!
}

input QueryNodes {
  _type: String!
  filter: [Expression!]
  limit: Int!
}

input QueryEdges {
  _type: String!
  filter: [Expression!]
  limit: Int!
}



input EdgeInput {
  node: Map
  from: ForeignKey!
  to: ForeignKey!
}

type Query {
  node(input: ForeignKey!): Node
  nodes(input: QueryNodes!): [Node!]!
  edge(input: ForeignKey!): Edge
  edges(input: QueryEdges!): [Edge!]!
}

type Mutation {
  createNode(input: Map!): Node!
  setNode(input: Map!): Node!
  delNode(input: ForeignKey!): Counter

  createEdge(input: EdgeInput!): Edge!
  setEdge(input: EdgeInput!): Edge!
  delEdge(input: ForeignKey!): Counter
}
