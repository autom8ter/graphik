syntax = "proto3";

package api;

option go_package = "apipb";

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

enum Op {
  CREATE_NODES =0;
  PATCH_NODES =1;
  DELETE_NODES =2;
  CREATE_EDGES =3;
  PATCH_EDGES =4;
  DELETE_EDGES =5;
  SET_AUTH =6;

}

enum Keyword {
  ANY = 0;
  DEFAULT =1;
}

enum Cascade {
  NONE =0;
  FROM =1;
  TO =2;
  MUTUAL= 3;
}

message Paths {
  repeated string values=1;
}

message Values {
  google.protobuf.Struct values =1;
}

message Command {
  Op op =1;
  google.protobuf.Any val =2;
  google.protobuf.Timestamp timestamp =3;
}

message Counter {
  int64 count =1;
}

message Pong {
  string message =1;
}

message Node {
  string path =1;
  google.protobuf.Struct attributes = 2;
  google.protobuf.Timestamp created_at =3;
  google.protobuf.Timestamp updated_at =4;
}

message Nodes {
  repeated Node nodes =1;
}

message Message {
  string channel =1;
  string type = 2;
  google.protobuf.Struct attributes = 3;
}

message Filter {
  string type =1;
  repeated string expressions =2;
  int32 limit =3;
}

message PathFilter {
  string path =1;
  Filter filter =2;
}

message Export {
  Nodes nodes =1;
  Edges edges =2;
}

message Patch {
  string path =1;
  google.protobuf.Struct patch = 2;
}

message Patches {
  repeated Patch patches =1;
}

message Edge {
  string path =1;
  bool mutual =2;
  Cascade cascade =3;
  google.protobuf.Struct attributes = 4;
  string from =5;
  string to =6;
  google.protobuf.Timestamp created_at =7;
  google.protobuf.Timestamp updated_at =8;
}

message Edges {
  repeated Edge edges =1;
}

message RaftNode {
  string node_id =1;
  string address =2;
}

message AuthConfig {
  repeated string jwks_sources =1;
  repeated string auth_expressions =2;
}

message RaftConfig {
  string bind =1;
  string storage_path =2;
  string join =3;
  string node_id =4;
}

message HTTPConfig {
  string bind =1;
  repeated string allowed_origins=2;
  repeated string allowed_headers =3;
  repeated string allowed_methods =4;
}

message GRPCConfig {
  string bind =1;
}

message Config {
  HTTPConfig http =1;
  GRPCConfig grpc =2;
  RaftConfig raft =3;
  AuthConfig auth =4;
}

message UserIntercept {
  string request_path =1;
  google.protobuf.Struct request =2;
  Node user =3;
}

service PrivateService {
  rpc Ping(google.protobuf.Empty) returns(Pong) {}

  rpc JoinCluster(RaftNode) returns(google.protobuf.Empty) {}
  rpc GetAuth(google.protobuf.Empty) returns(AuthConfig){}
  rpc SetAuth(AuthConfig) returns(AuthConfig){}

  rpc CreateNodes(Nodes) returns(Nodes){}
  rpc SearchNodes(Filter) returns (Nodes){}
  rpc PatchNodes(Patches) returns(Nodes){}
  rpc DelNodes(Paths) returns(Counter){}

  rpc CreateEdges(Edges) returns(Edges){}
  rpc SearchEdges(Filter) returns (Edges){}
  rpc PatchEdges(Patches) returns(Edges){}
  rpc DelEdges(Paths) returns(Counter){}

  rpc EdgesFrom(PathFilter) returns(Edges){}
  rpc EdgesTo(PathFilter) returns(Edges){}
}