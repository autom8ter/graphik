syntax = "proto3";

package api;

option go_package = "apipb";

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

enum Op {
  CREATE_NODE =0;
  PATCH_NODE =1;
  DELETE_NODE =2;
  CREATE_EDGE =3;
  PATCH_EDGE =4;
  DELETE_EDGE =5;
}

enum Keyword {
  ANY =0;
  DEFAULT =1;
}

message Command {
  Op op =1;
  google.protobuf.Any val =2;
  google.protobuf.Timestamp timestamp =3;
}

message Counter {
  int64 count =1;
}

message Path {
  string Type =1;
  string ID =2;
}

message Node {
  Path path =1;
  google.protobuf.Struct attributes = 2;
  google.protobuf.Timestamp created_at =3;
  google.protobuf.Timestamp updated_at =4;
}

message Message {
  string channel =1;
  string type = 2;
  google.protobuf.Struct attributes = 3;
}

message Filter {
  string type =1;
  repeated string expressions =2;
  int32 limit =3;
}

message Export {
  repeated Node nodes =1;
  repeated Edge edges =2;
}

message Patch {
  Path path =1;
  google.protobuf.Struct patch = 2;
}

message Edge {
  Path path =1;
  bool mutual =2;
  google.protobuf.Struct attributes = 3;
  Path from =4;
  Path to =5;
  google.protobuf.Timestamp created_at =6;
  google.protobuf.Timestamp updated_at =7;
}

message EdgeFilters {
  repeated Filter edges_from =1;
  repeated Filter edges_to =2;
}

message RaftJoinRequest {
  string node_id =1;
  string address =2;
}

message RaftJoinResponse {}

message GetJWKSRequest {}

message GetJWKSResponse {
  map<string, string> jwks =1;
}

message UpdateJWKSRequest {
  map<string, string> jwks =1;
}

message UpdateJWKSResponse {
  map<string, string> jwks =1;
}

message SearchNodesRequest {
    Filter filter =1;
}

message SearchNodesResponse {
  repeated Node nodes = 1;
}

message SearchEdgesRequest {
  Filter filter =1;
}

message SearchEdgesResponse {
  repeated Edge edges = 1;
}

service AdminService {
  rpc RaftJoin(RaftJoinRequest) returns(RaftJoinResponse) {}
  rpc GetJWKS(GetJWKSRequest) returns (GetJWKSResponse){}
  rpc UpdateJWKS(UpdateJWKSRequest) returns(UpdateJWKSResponse){}
  rpc SearchNodes(SearchNodesRequest) returns (SearchNodesResponse){}
  rpc SearchEdges(SearchEdgesRequest) returns (SearchEdgesResponse){}
}